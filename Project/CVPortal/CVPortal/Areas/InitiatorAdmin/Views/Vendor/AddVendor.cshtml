@model CVPortal.ViewModels.VendorViewModel
@{
    ViewBag.Title = "Add Vendor";
    Layout = "~/Areas/InitiatorAdmin/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Add Vendor</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("VendorIndex","Vendor")">Vendors</a></li>
                        <li class="breadcrumb-item active">Add Vendor</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card card-primary">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <div class="card-body">
                                <div class="form-group">
                                    <label for="Email" style="margin-right:20px;">Is New Vendor?</label>
                                    @Html.RadioButtonFor(model => model.IsNewVendor, true, new { @id = "isNewVendor1" })
                                    <label for="isNewVendor1" style="font-weight: 500; margin-right:15px;">Yes</label>
                                    @Html.RadioButtonFor(model => model.IsNewVendor, false, new { @id = "isNewVendor2" })
                                    <label for="isNewVendor2" style="font-weight: 500;">No</label>
                                </div>
                                <div class="form-group existing-reason" style="display:none;">
                                    <label for="Email">What need to change in existing vendor?</label>
                                    @Html.DropDownListFor(model => model.ExistingReason, ViewBag.VendorExistingOptionsList as SelectList, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ExistingReason, "")
                                </div>
                                <div class="form-group">
                                    <label for="VendorCode">Employee Code</label>
                                    @Html.TextBoxFor(model => model.VendorCode, new { id = "txtVendorCode", @class = "form-control", placeholder = "Vendor Code", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.VendorCode, "")
                                </div>
                                <div class="form-group">
                                    <label for="Email">Email</label>
                                    @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", @class = "form-control", placeholder = "Email" })
                                    @Html.ValidationMessageFor(model => model.Email, "")
                                </div>
                                <div class="form-group">
                                    <label for="VendorName">Vendor Name</label>
                                    @Html.TextBoxFor(model => model.vend_name, new { id = "txtVendorName", @class = "form-control", placeholder = "Vendor Name" })
                                    @Html.ValidationMessageFor(model => model.vend_name, "")
                                </div>
                            </div>
                            <div class="card-footer">
                                <button type="submit" class="btn btn-primary">Save</button>
                                <a href="@Url.Action("VendorIndex","Vendor")" class="btn btn-default">Cancel</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        function SetNewExistingVendor(value) {
            if (value == 'True') {
                $("#txtVendorCode").attr("readonly", "readonly");
                $("#txtEmail").removeAttr("readonly");
                $("#txtVendorName").removeAttr("readonly");
                $(".existing-reason").hide();
            } else if (value == 'False') {
                $("#txtVendorCode").removeAttr("readonly");
                $("#txtEmail").attr("readonly", "readonly")
                $("#txtVendorName").attr("readonly", "readonly")
                $(".existing-reason").show();
            }
        }

        $(document).ready(function () {
            SetNewExistingVendor($('input[type=radio][name=IsNewVendor]:checked').val());

            $('input[type=radio][name=IsNewVendor]').change(function () {
                SetNewExistingVendor(this.value);
            });

            $("#txtVendorCode").change(function (e) {
              $.ajax({
                  url: '@Url.Action("GetVendorDetails", new { area = "InitiatorAdmin", controller = "Vendor" })?vendorCode=' + $("#txtVendorCode").val(),
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.status) {
                            $("#txtEmail").val(response.result.Email)
                            $("#txtVendorName").val(response.result.vend_name)
                        } else {
                            toastr.error(response.result, "Vendor");
                        }
                    },
                    error: function (response) {
                        toastr.error(response.responseText, "Vendor");
                    }
              });
            });
        });
    </script>
}