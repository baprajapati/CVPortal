@model CVPortal.ViewModels.UserViewModel
@{
    ViewBag.Title = "Edit User";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Edit User</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("UserIndex","User")">Users</a></li>
                        <li class="breadcrumb-item active">Edit User</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card card-primary">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.Password)
                            @Html.HiddenFor(model => model.RoleName)
                            <div class="card-body">
                                <div class="form-group">
                                    <label for="Email">User Code</label>
                                    @Html.TextBoxFor(model => model.HAUSER, new { id = "txtHAUSER", @class = "form-control", placeholder = "User Code" })
                                    @Html.ValidationMessageFor(model => model.HAUSER, "")
                                </div>
                                <div class="form-group">
                                    <label for="Email">Department Code</label>
                                    @Html.DropDownListFor(model => model.Dept_Code, ViewBag.DepartmentList as SelectList, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Dept_Code, "")
                                </div>
                                <div class="form-group">
                                    <label for="Email">Name</label>
                                    @Html.TextBoxFor(model => model.HANAME, new { id = "txtHANAME", @class = "form-control", placeholder = "Name" })
                                    @Html.ValidationMessageFor(model => model.HANAME, "")
                                </div>
                                <div class="form-group">
                                    <label for="Email">Email</label>
                                    @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", @class = "form-control", placeholder = "Email" })
                                    @Html.ValidationMessageFor(model => model.Email, "")
                                </div>
                                <div class="form-group">
                                    <label for="RoleName">Role</label>
                                    @Html.TextBoxFor(model => model.RoleName, new { id = "txtRoleName", @class = "form-control", placeholder = "RoleName", disabled = "disabled" })
                                </div>
                                <div class="form-group">
                                    <label for="RoleName">Next User</label>
                                    @Html.DropDownListFor(model => model.HANEXT, ViewBag.UserList as SelectList, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="card-footer">
                                <button type="submit" class="btn btn-primary">Save</button>
                                <a href="@Url.Action("UserIndex","User")" class="btn btn-default">Cancel</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}