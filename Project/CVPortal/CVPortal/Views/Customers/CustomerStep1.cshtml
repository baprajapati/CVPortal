@model CVPortal.ViewModels.CustomerStep1

@{
    ViewBag.Title = "Customer Form";
}

@section scripts {
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDEppryGKRW0Nqe0JHtGQZ5l2BXTnOyL5k"></script>
    @*<script language="javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC7Fr--PIVfC4atUGJ6_2Ru_T4so77KM2g"></script>*@

    <script type="text/javascript">
        $(document).ready(function () {
            $(".back-button-1").click(function () {
                window.location.href = "/Customers/CustomerStep1/" + $("#Id").val();
            });

            $("#Dlr_Add_Pincode").change(function () {
                $("#Dlr_Add_Country").val("Loading...");
                $("#Dlr_Add_State").val("Loading...");
                $("#Dlr_Add_City").val("Loading...");

                var pinCode = $(this).val();
                $.getJSON("https://api.postalpincode.in/pincode/" + pinCode, function (data) {
                    if (data[0].PostOffice) {
                        var country = data[0].PostOffice[0].Country;
                        var state = data[0].PostOffice[0].State;
                        var city = data[0].PostOffice[0].District;

                        $("#Dlr_Add_Country").val(country);
                        $("#Dlr_Add_State").val(state);
                        $("#Dlr_Add_City").val(city);
                    } else {
                        $("#Dlr_Add_Country").val("");
                        $("#Dlr_Add_State").val("");
                        $("#Dlr_Add_City").val("");
                    }
                })
            });

            $("#Supp_Add_Pincode").change(function () {
                $("#Supp_Add_Country").val("Loading...");
                $("#Supp_Add_State").val("Loading...");
                $("#Supp_Add_City").val("Loading...");

                var pinCode = $(this).val();
                $.getJSON("https://api.postalpincode.in/pincode/" + pinCode, function (data) {
                    if (data[0].PostOffice) {
                        var country = data[0].PostOffice[0].Country;
                        var state = data[0].PostOffice[0].State;
                        var city = data[0].PostOffice[0].District;

                        $("#Supp_Add_Country").val(country);
                        $("#Supp_Add_State").val(state);
                        $("#Supp_Add_City").val(city);
                    } else {
                        $("#Supp_Add_Country").val("");
                        $("#Supp_Add_State").val("");
                        $("#Supp_Add_City").val("");
                    }
                })
            });

            $("#orgStatus1").click(function () {
                $("#Org_Sts").val("1");
            });

            $("#orgStatus2").click(function () {
                $("#Org_Sts").val("2");
            });

            $("#orgStatus3").click(function () {
                $("#Org_Sts").val("3");
            });

            $("#orgStatus4").click(function () {
                $("#Org_Sts").val("4");
            });

            $("#IsSameAsDlr_Address").click(function () {
                if ($(this).is(':checked')) {
                    $("#Supp_Address").val($("#Dlr_Address").val());
                    $("#Supp_Add_Pincode").val($("#Dlr_Add_Pincode").val());
                    $("#Supp_Add_Country").val($("#Dlr_Add_Country").val());
                    $("#Supp_Add_State").val($("#Dlr_Add_State").val());
                    $("#Supp_Add_City").val($("#Dlr_Add_City").val());
                } else {
                    $("#Supp_Address").val("");
                    $("#Supp_Add_Pincode").val("");
                    $("#Supp_Add_Country").val("");
                    $("#Supp_Add_State").val("");
                    $("#Supp_Add_City").val("");
                }
            });
        });
    </script>
}

<div class="jumbotron" style="padding-top:10px !important;">
    @using (Html.BeginForm("CustomerStep1", "Customers", FormMethod.Post))
    {
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IsMain)

        <div>
            <h3 class="form-signin-heading text-cente`r">Domestic Customer Registration Form</h3>
            <label>General Instructions</label>
            <ol>
                <li>Fill in the form giving relevant details. Incomplete form may not be processed.</li>
                <li>All fields are mandatory. Tick in appropriate box.</li>
            </ol>
            <br />
            <div class="row row-margin text-center main-step-bg-color">
                <div class="col-md-3 steps steps-active back-button-1">
                    <label>Step 1</label>
                </div>
                <div class="col-md-3 steps">
                    <label>Step 2</label>
                </div>
                <div class="col-md-3 steps">
                    <label>Step 3</label>
                </div>
                <div class="col-md-3 steps">
                    <label>Step 4</label>
                </div>
            </div>
            <br />
            <label>Customer Information</label>
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-2">
                        <span>1.</span>
                    </div>
                    <div class="col-md-10">
                        <span>Organization Status</span><span class="color-red"> * </span><br />
                        <span>(tick  as applicable)</span>
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.HiddenFor(model => model.Org_Sts)
                    @Html.RadioButtonFor(model => model.Org_Sts, "1", Model.IsMain ? (object)new { @id = "orgStatus1" } : new { @id = "orgStatus1", disabled = "disabled" })
                    <label for="orgStatus1" style="font-weight: 500;">Private Ltd</label>
                    <br />
                    @Html.RadioButtonFor(model => model.Org_Sts, "2", Model.IsMain ? (object)new { @id = "orgStatus2" } : new { @id = "orgStatus2", disabled = "disabled" })
                    <label for="orgStatus2" style="font-weight: 500;">Partnership/LLP</label>
                    @Html.ValidationMessageFor(model => model.Org_Sts)
                </div>
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.Org_Sts, "3", Model.IsMain ? (object)new { @id = "orgStatus3" } : new { @id = "orgStatus3", disabled = "disabled" })
                    <label for="orgStatus3" style="font-weight: 500;">Proprietorship</label>
                    <br />
                    @Html.RadioButtonFor(model => model.Org_Sts, "4", Model.IsMain ? (object)new { @id = "orgStatus4" } : new { @id = "orgStatus4", disabled = "disabled" })
                    <label for="orgStatus4" style="font-weight: 500;">Others</label>
                </div>
            </div><br />
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-2">
                        <span>2.</span>
                    </div>
                    <div class="col-md-10">
                        <span>Customer Name</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.Cust_name, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Cust_name)
                </div>
            </div><br />
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-2">
                        <span>3.</span>
                    </div>
                    <div class="col-md-10">
                        <span>CEO Name</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CEO_name, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CEO_name)
                </div>
                <div class="col-md-1" style="padding-right:0;padding-left:0;">
                    <span>Designation</span><span class="color-red"> * </span>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.CEO_Designation, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CEO_Designation)
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-offset-2 col-md-10">
                        <span>Contact Numbers</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CEO_Contact_no, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CEO_Contact_no)
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-offset-2 col-md-10">
                        <span>Email Address</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.HiddenFor(model => model.Email)
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div><br />
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-2">
                        <span>4.</span>
                    </div>
                    <div class="col-md-10">
                        <span>Dealer Address (Registered / Corporate Office)</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.Dlr_Address, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Dlr_Address)
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.Dlr_Add_StateCode, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Dlr_Add_StateCode)
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.Dlr_Add_Pincode, Model.IsMain ? (object)new { @class = "form-control", placeholder = "Pincode" } : new { @class = "form-control", @disabled = "disabled", placeholder = "Pincode" })
                    @Html.ValidationMessageFor(model => model.Dlr_Add_Pincode)
                </div>
            </div>
            <div class="row">
                <div class="col-md-offset-3 col-md-3">
                    @Html.TextBoxFor(model => model.Dlr_Add_Country, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Dlr_Add_Country)
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Dlr_Add_State, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Dlr_Add_State)
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Dlr_Add_City, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Dlr_Add_City)
                </div>
            </div><br />
            <div class="row">
                <div class="col-md-offset-3 col-md-9">
                    @Html.CheckBoxFor(model => model.IsSameAsDlr_Address, Model.IsMain ? (object)new { } : new { @disabled = "disabled" })
                    <label for="IsSameAsAddress1" style="font-weight: 500;">Same as Dealer Address (Registered / Corporate Office)</label>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-2">
                        <span>5.</span>
                    </div>
                    <div class="col-md-10">
                        <span>Supply Address (Showroom/Workshop)</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.Supp_Address, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Supp_Address)
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.Supp_Add_StateCode, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Supp_Add_StateCode)
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.Supp_Add_Pincode, Model.IsMain ? (object)new { @class = "form-control", placeholder = "Pincode" } : new { @class = "form-control", @disabled = "disabled", placeholder = "Pincode" })
                    @Html.ValidationMessageFor(model => model.Supp_Add_Pincode)
                </div>
            </div>
            <div class="row">
                <div class="col-md-offset-3 col-md-3">
                    @Html.TextBoxFor(model => model.Supp_Add_Country, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Supp_Add_Country)
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Supp_Add_State, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Supp_Add_State)
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Supp_Add_City, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Supp_Add_City)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-2">
                        <span>6.</span>
                    </div>
                    <div class="col-md-10">
                        <span>Contact No</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.Contact_no, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Contact_no)
                </div>
            </div>
            <br /><br />
            <input type="submit" value="Next" class="btn btn-success pull-right" />
        </div>
    }
</div>