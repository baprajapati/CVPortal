@model CVPortal.ViewModels.CustomerStep4

@{
    ViewBag.Title = "Customer Form";
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".back-button-1").click(function () {
                window.location.href = "/Customers/CustomerStep1/" + $("#Id").val();
            });

            $(".back-button-2").click(function () {
                window.location.href = "/Customers/CustomerStep2/" + $("#Id").val();
            });

            $(".back-button-3").click(function () {
                window.location.href = "/Customers/CustomerStep3/" + $("#Id").val();
            });

            $(".back-button-4").click(function () {
                window.location.href = "/Customers/CustomerStep4/" + $("#Id").val();
            });

            $('#AuditedFile').change(function (e) {
                var file = e.target.files[0];

                if (file.type != "application/pdf") {
                    $("#AuditedFile").val("");
                    alert("Only PDF file allowed.");
                } else if (file.size > 5242880) {
                    $("#AuditedFile").val("");
                    toastr.error("Maximum 5 MB size allowed, your uploaded Audited Balance sheet file size is " + (file.size / 1024 / 1024).toFixed(2) + " MB.", "Customer");
                }
            });

            $('#MOAFile').change(function (e) {
                var file = e.target.files[0];

                if (file.type != "application/pdf") {
                    $("#MOAFile").val("");
                    alert("Only PDF file allowed.");
                } else if (file.size > 5242880) {
                    $("#MOAFile").val("");
                    toastr.error("Maximum 5 MB size allowed, your uploaded AOA & MOA file size is " + (file.size / 1024 / 1024).toFixed(2) + " MB.", "Customer");
                }
            });

            $("#btnApprove").click(function (e) {
                e.preventDefault();

                if ($("#DealerType").val() != "Scrap" && $("#Code").val() == "") {
                    toastr.error("Code is required.", "Customer");
                    return;
                }

                $(this).html("Loading...");
                $(".btnClose").hide();

                $.ajax({
                    url: '@Url.Action("ApproveCustomerDetails", new { area = "", controller = "Customers" })',
                    type: "POST",
                    data: JSON.stringify({
                        customerId: $("#Id").val(),
                        code: $("#Code").val(),
                        dealerType: $("#DealerType").val()
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.status) {
                            $('#approveModal').modal('hide');
                            window.location.href = "../CustomerIndex/" + $("#Id").val();
                        } else {
                            $("#btnApprove").html("Approve");
                            $(".btnClose").show();
                            toastr.error(response.result, "Customer");
                        }
                    },
                    error: function (response) {
                        toastr.error(response.responseText, "Customer");
                    }
                });
            });

            $("#DealerType").change(function (e) {
                if (this.value == "Scrap") {
                    $(".approve-code").hide();
                    $("#Code").val("");
                } else {
                    $(".approve-code").show();
                }
            });

            $("#btnReject").click(function (e) {
                e.preventDefault();

                $(this).html("Loading...");
                $(".btnClose").hide();

                $.ajax({
                    url: '@Url.Action("RejectCustomerDetails", new { area = "", controller = "Customers" })',
                    type: "POST",
                    data: JSON.stringify({
                        id: $("#Id").val(),
                        remarks: $("#remarks").val()
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.status) {
                            $('#rejectModal').modal('hide');
                            window.location.href = "../CustomerIndex/" + $("#Id").val();
                        } else {
                            $("#btnReject").html("Reject");
                            $(".btnClose").show();
                            alert(response.result);
                        }
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });
        });
    </script>
}

<div class="jumbotron" style="padding-top:10px !important;">
    @using (Html.BeginForm("CustomerStep4", "Customers", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IsMain)

        <div>
            <h3 class="form-signin-heading text-center">Domestic Customer Registration Form</h3>
            <label>General Instructions</label>
            <ol>
                <li>Fill in the form giving relevant details. Incomplete form may not be processed.</li>
                <li>All fields are mandatory. Tick in appropriate box.</li>
            </ol>
            <br />
            <div class="row row-margin text-center main-step-bg-color">
                <div class="col-md-3 steps steps-active back-button-1">
                    <label>Step 1</label>
                </div>
                <div class="col-md-3 steps steps-active back-button-2">
                    <label>Step 2</label>
                </div>
                <div class="col-md-3 steps steps-active back-button-3">
                    <label>Step 3</label>
                </div>
                <div class="col-md-3 steps steps-active back-button-4">
                    <label>Step 4</label>
                </div>
            </div>
            <br /><br />
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-2">
                        <span>19.</span>
                    </div>
                    <div class="col-md-10">
                        <span>Swift Code</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.Swift_Code, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Swift_Code)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    <div class="col-md-2">
                        <span>20.</span>
                    </div>
                    <div class="col-md-10">
                        <span>ITR Declaration.</span><span class="color-red"> * </span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="col-md-offset-2 col-md-10">
                        <span>ITR Return filling status last two Assessment Year.</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.ITR_ReturnSts, Model.IsMain ? (object)new { @class = "form-control" } : new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.ITR_ReturnSts)
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="col-md-offset-2 col-md-10">
                        <span>Turnover in more than 10 Crore for FY:  Yes or No.</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.ITR_ReturnStsTurnover, true, Model.IsMain ? (object)new { @id = "IsITRFiled11" } : new { @id = "IsITRFiled11", @disabled = "disabled" })
                    <label for="IsITRFiled11" style="font-weight: 500; margin-right: 30px;">Yes</label>
                    @Html.RadioButtonFor(model => model.ITR_ReturnStsTurnover, false, Model.IsMain ? (object)new { @id = "IsITRFiled12" } : new { @id = "IsITRFiled12", @disabled = "disabled" })
                    <label for="IsITRFiled12" style="font-weight: 500; margin-right: 30px;">No</label>
                    @Html.ValidationMessageFor(model => model.ITR_ReturnStsTurnover)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <div class="col-md-offset-2 col-md-10">
                        <span>Is aggregated TDS deduction more than 50000 in last two years</span><span class="color-red"> * </span>
                    </div>
                </div>
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.ITR_ReturnTDSDeduct, true, Model.IsMain ? (object)new { @id = "IsITRFiled13" } : new { @id = "IsITRFiled13", @disabled = "disabled" })
                    <label for="IsITRFiled13" style="font-weight: 500; margin-right: 30px;">Yes</label>
                    @Html.RadioButtonFor(model => model.ITR_ReturnTDSDeduct, false, Model.IsMain ? (object)new { @id = "IsITRFiled14" } : new { @id = "IsITRFiled14", @disabled = "disabled" })
                    <label for="IsITRFiled14" style="font-weight: 500; margin-right: 30px;">No</label>
                    @Html.ValidationMessageFor(model => model.ITR_ReturnTDSDeduct)
                </div>
            </div>
            <br /><br />
            <input type="button" value="Back" class="btn btn-primary pull-left back-button-3" />
            @if (Model.IsMain)
            {
                <input type="submit" value="Submit" class="btn btn-success pull-right" />
            }
            else if (Model.IsApprover)
            {
                <input type="button" value="Reject" class="btn btn-danger pull-right" data-toggle="modal" data-target="#rejectModal" />
                <input type="button" value="Approve" class="btn btn-success pull-right" data-toggle="modal" data-target="#approveModal" style="margin-right:20px;" />
            }
        </div>
    }
</div>

<div class="modal fade" id="approveModal" tabindex="-1" role="dialog" aria-labelledby="approveModalLabel" data-backdrop="static" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <label class="modal-title" id="exampleModalLabel">Approve Confirmation</label>
            </div>
            @if (HttpContext.Current.Session["Role"].ToString() == string.Empty
                    || HttpContext.Current.Session["Role"].ToString() != "InitiatorAdmin" || !Model.IsCreatedUser)
            {
                <div class="modal-body">
                    <span>Are you sure, you want to approve?</span>
                </div>
            }

            @if (HttpContext.Current.Session["Role"].ToString() == "InitiatorAdmin" && Model.IsCreatedUser)
            {
                <div class="modal-body">
                    <div class="form-group">
                        <label for="DealerType">Dealer Type</label>
                        <select class="form-control" id="DealerType">
                            <option value="Domestic">Domestic</option>
                            <option value="ASSC">ASSC</option>
                            <option value="Scrap">Scrap</option>
                        </select>
                    </div>
                    <div class="form-group approve-code">
                        <label for="BankBranch">Code</label>
                        @Html.TextBox("Code", "", new { @class = "form-control", placeholder = "Code" })
                    </div>
                </div>
            }
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btnClose" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnApprove">Approve</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="rejectModal" tabindex="-1" role="dialog" aria-labelledby="rejectModalLabel" data-backdrop="static" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <label class="modal-title" id="exampleModalLabel">Reject Confirmation</label>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <span for="message-text" class="col-form-label">Remarks:</span>
                    <textarea class="form-control" id="remarks"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btnClose" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnReject">Reject</button>
            </div>
        </div>
    </div>
</div>